// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"apps/services-orchestration/services-staging-handler/internal/entity"
	"apps/services-orchestration/services-staging-handler/internal/event"
	"apps/services-orchestration/services-staging-handler/internal/infra/database"
	"apps/services-orchestration/services-staging-handler/internal/infra/web/handlers"
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
	"libs/golang/shared/go-events/events"
)

// Injectors from wire.go:

func NewWebProcessingJobDependenciesHandler(client *mongo.Client, eventDispatcher events.EventDispatcherInterface, database2 string) *handlers.WebProcessingJobDependenciesHandler {
	processingJobDependenciesRepository := database.NewProcessingJobDependenciesRepository(client, database2)
	processingJobDependenciesCreated := event.NewProcessingJobDependenciesCreated()
	webProcessingJobDependenciesHandler := handlers.NewWebProcessingJobDependenciesHandler(eventDispatcher, processingJobDependenciesRepository, processingJobDependenciesCreated)
	return webProcessingJobDependenciesHandler
}

func NewHealthzHandler() *handlers.WebHealthzHandler {
	webHealthzHandler := handlers.NewWebHealthzHandler()
	return webHealthzHandler
}

// wire.go:

var setProcessingJobDependenciesRepositoryDependency = wire.NewSet(database.NewProcessingJobDependenciesRepository, wire.Bind(
	new(entity.ProcessingJobDependenciesInterface),
	new(*database.ProcessingJobDependenciesRepository),
),
)

var setProcessingJobDependenciesCreatedEvent = wire.NewSet(event.NewProcessingJobDependenciesCreated, wire.Bind(new(events.EventInterface), new(*event.ProcessingJobDependenciesCreated)))
