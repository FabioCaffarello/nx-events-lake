{"swagger":"2.0","host":"localhost:8001","basePath":"/","info":{"description":"Schema Handler API","version":"1.0.0","title":"Schema Handler API","termsOfService":"http://swagger.io/terms/","contact":{"email":"fabio.caffarello@gmail.com","name":"Fabio Caffarello"}},"definitions":{"inputDTO.SchemaDTO":{"properties":{"schema_type":{"type":"string"},"service":{"type":"string"},"source":{"type":"string"},"context":{"type":"string"},"json_schema":{"type":"object"}},"type":"object"},"outputDTO.SchemaDTO":{"properties":{"id":{"type":"string"},"schema_type":{"type":"string"},"service":{"type":"string"},"source":{"type":"string"},"context":{"type":"string"},"json_schema":{"type":"object"},"schema_id":{"type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"}}},"outputDTO.SchemaVersionDTO":{"properties":{"id":{"type":"string"},"versions":{"type":"array","items":{"type":"object","$ref":"#/definitions/outputDTO.SchemaData"}}}},"outputDTO.SchemaData":{"properties":{"schema_id":{"type":"string"},"schema":{"type":"object","$ref":"#/definitions/outputDTO.SchemaDTO"}}},"sharedDTO.JobDependencies":{"properties":{"service":{"type":"string"},"source":{"type":"string"}}},"handlers.Error":{"properties":{"message":{"type":"string"}},"type":"object"}},"paths":{"/schemas":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"schema to be created","required":true,"schema":{"properties":{"schema_type":{"type":"string"},"service":{"type":"string"},"source":{"type":"string"},"context":{"type":"string"},"json_schema":{"type":"object"}},"type":"object"}}],"responses":{"200":{"description":"Schema created","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:8001/schemas',\n  headers: {accept: 'application/json', 'content-type': 'application/json'},\n  body: {\n    schema_type: 'string',\n    service: 'string',\n    source: 'string',\n    context: 'string',\n    json_schema: {}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url http://localhost:8001/schemas \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}'"},{"lang":"Shell + Httpie","source":"echo '{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}' |  \\\n  http POST http://localhost:8001/schemas \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\npayload = \"{\\\"schema_type\\\":\\\"string\\\",\\\"service\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"context\\\":\\\"string\\\",\\\"json_schema\\\":{}}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/schemas\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"schema_type\\\":\\\"string\\\",\\\"service\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"context\\\":\\\"string\\\",\\\"json_schema\\\":{}}\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$request->setBody('{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}');\n\n$request->setRequestUrl('http://localhost:8001/schemas');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]},"get":{"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"List all schemas","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/update":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"schema to be updated","required":true,"schema":{"properties":{"schema_type":{"type":"string"},"service":{"type":"string"},"source":{"type":"string"},"context":{"type":"string"},"json_schema":{"type":"object"}},"type":"object"}}],"responses":{"200":{"description":"Schema updated","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:8001/schemas/update',\n  headers: {accept: 'application/json', 'content-type': 'application/json'},\n  body: {\n    schema_type: 'string',\n    service: 'string',\n    source: 'string',\n    context: 'string',\n    json_schema: {}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url http://localhost:8001/schemas/update \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json' \\\n  --data '{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}'"},{"lang":"Shell + Httpie","source":"echo '{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}' |  \\\n  http POST http://localhost:8001/schemas/update \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\npayload = \"{\\\"schema_type\\\":\\\"string\\\",\\\"service\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"context\\\":\\\"string\\\",\\\"json_schema\\\":{}}\"\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/schemas/update\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/update\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"schema_type\\\":\\\"string\\\",\\\"service\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"context\\\":\\\"string\\\",\\\"json_schema\\\":{}}\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/update');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$request->setBody('{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"schema_type\":\"string\",\"service\":\"string\",\"source\":\"string\",\"context\":\"string\",\"json_schema\":{}}');\n\n$request->setRequestUrl('http://localhost:8001/schemas/update');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/versions":{"get":{"consumes":["application/json"],"produces":["application/json"],"responses":{"200":{"description":"List all schemas Versions","schema":{"$ref":"#/definitions/outputDTO.SchemaVersionDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/versions',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/versions \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/versions \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/versions\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/versions\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/versions');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/versions');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/{id}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"schema id","required":true,"type":"string"}],"responses":{"200":{"description":"List schema by id","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/%7Bid%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/%7Bid%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/%7Bid%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/%7Bid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/%7Bid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/%7Bid%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/%7Bid%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/versions/{id}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"schema id","required":true,"type":"string"}],"responses":{"200":{"description":"List all schema versions by id","schema":{"$ref":"#/definitions/outputDTO.SchemaVersionDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/versions/%7Bid%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/versions/%7Bid%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/versions/%7Bid%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/versions/%7Bid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/versions/%7Bid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/versions/%7Bid%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/versions/%7Bid%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/versions/{id}/version-id/{versionId}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"id","description":"schema id","required":true,"type":"string"},{"in":"path","name":"versionId","description":"schema version id","required":true,"type":"string"}],"responses":{"200":{"description":"List schema version by id and version id","schema":{"$ref":"#/definitions/outputDTO.SchemaData"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/versions/%7Bid%7D/version-id/%7BversionId%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/service/{service}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"schema service","required":true,"type":"string"}],"responses":{"200":{"description":"List all schemas by service","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/service/%7Bservice%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/service/%7Bservice%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/service/%7Bservice%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/service/%7Bservice%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/service/%7Bservice%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/service/%7Bservice%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/service/%7Bservice%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/service/{service}/source/{source}/schema-type/{schemaType}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Schemas service","required":true,"type":"string"},{"in":"path","name":"source","description":"Schemas source","required":true,"type":"string"},{"in":"path","name":"schemaType","description":"Schemas type","required":true,"type":"string"}],"responses":{"200":{"description":"List one schema by service, source and schema type","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/schema-type/%7BschemaType%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/service/{service}/context/{context}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Schemas service","required":true,"type":"string"},{"in":"path","name":"context","description":"Schemas context","required":true,"type":"string"}],"responses":{"200":{"description":"List schemas by service and context","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/service/%7Bservice%7D/context/%7Bcontext%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/service/%7Bservice%7D/context/%7Bcontext%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/schemas/service/{service}/source/{source}/context/{context}/schema-type/{schemaType}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Schemas service","required":true,"type":"string"},{"in":"path","name":"source","description":"Schemas source","required":true,"type":"string"},{"in":"path","name":"context","description":"Schemas context","required":true,"type":"string"},{"in":"path","name":"schemaType","description":"Schemas type","required":true,"type":"string"}],"responses":{"200":{"description":"List one schema by service, source, context and schema type","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8001\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8001\",\n  CURLOPT_URL => \"http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8001/schemas/service/%7Bservice%7D/source/%7Bsource%7D/context/%7Bcontext%7D/schema-type/%7BschemaType%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}}}}
