// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"apps/services-orchestration/services-input-handler/internal/entity"
	"apps/services-orchestration/services-input-handler/internal/event"
	"apps/services-orchestration/services-input-handler/internal/infra/database"
	"apps/services-orchestration/services-input-handler/internal/infra/web/handlers"
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
	"libs/golang/shared/go-events/events"
)

// Injectors from wire.go:

func NewWebInputHandler(client *mongo.Client, eventDispatcher events.EventDispatcherInterface, database2 string) *handlers.WebInputHandler {
	inputRepository := database.NewInputRepository(client, database2)
	inputCreated := event.NewInputCreated()
	webInputHandler := handlers.NewWebInputHandler(eventDispatcher, inputRepository, inputCreated)
	return webInputHandler
}

func NewWebInputStatusHandler(client *mongo.Client, eventDispatcher events.EventDispatcherInterface, database2 string) *handlers.WebInputStatusHandler {
	inputRepository := database.NewInputRepository(client, database2)
	inputStatusUpdated := event.NewInputStatusUpdated()
	webInputStatusHandler := handlers.NewWebInputStatusHandler(eventDispatcher, inputRepository, inputStatusUpdated)
	return webInputStatusHandler
}

func NewHealthzHandler() *handlers.WebHealthzHandler {
	webHealthzHandler := handlers.NewWebHealthzHandler()
	return webHealthzHandler
}

// wire.go:

var setInputRepositoryDependency = wire.NewSet(database.NewInputRepository, wire.Bind(
	new(entity.InputInterface),
	new(*database.InputRepository),
),
)

var setInputCreatedEvent = wire.NewSet(event.NewInputCreated, wire.Bind(new(events.EventInterface), new(*event.InputCreated)))

var setInputStatusUpdatedEvent = wire.NewSet(event.NewInputStatusUpdated, wire.Bind(new(events.EventInterface), new(*event.InputStatusUpdated)))
