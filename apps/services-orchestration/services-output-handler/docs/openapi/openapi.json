Error: Invalid reference token: inputDTO.MetadataInputDTO
    at Function.get (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:79:19)
    at traverse (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:947:43)
    at /Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:646:43
    at Array.forEach (<anonymous>)
    at sampleObject (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:640:36)
    at traverse (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:1033:17)
    at Object.sample (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-sampler/dist/openapi-sampler.js:426:33)
    at getPayload (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-snippet/openapi-to-har.js:79:41)
    at Object.createHar [as getEndpoint] (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-snippet/openapi-to-har.js:53:20)
    at Object.getEndpointSnippets (/Users/fabiocaffarello/.npm/_npx/6c2dfd56fd0d49a8/node_modules/openapi-snippet/index.js:31:28)
{"swagger":"2.0","host":"localhost:8003","basePath":"/","info":{"description":"Output Handler API","version":"1.0.0","title":"Output Handler API","termsOfService":"http://swagger.io/terms/","contact":{"email":"fabio.caffarello@gmail.com","name":"Fabio Caffarello"}},"definitions":{"inputDTO.ServiceOutputDTO":{"properties":{"data":{"type":"object"},"metadata":{"$ref":"#/definitions/inputDTO.MetadataInputDTO"},"context":{"type":"string"}},"type":"object"},"outputDTO.ServiceOutputDTO":{"properties":{"id":{"type":"string"},"data":{"type":"object"},"metadata":{"$ref":"#/definitions/outputDTO.MetadataDTO"},"context":{"type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"}}},"sharedDTO.Metadata":{"properties":{"input_id":{"type":"string"},"input":{"$ref":"#/definitions/inputDTO.MetadataInput"},"service":{"type":"string"},"source":{"type":"string"}}},"sharedDTO.MetadataInput":{"properties":{"id":{"type":"string"},"data":{"type":"object"},"processing_id":{"type":"string"},"processing_timestamp":{"type":"string"}}},"handlers.Error":{"properties":{"message":{"type":"string"}},"type":"object"}},"paths":{"/outputs/service/{service}":{"post":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","name":"body","description":"Output to be created","required":true,"schema":{"properties":{"data":{"type":"object"},"metadata":{"$ref":"#/definitions/inputDTO.MetadataInputDTO"},"context":{"type":"string"}},"type":"object"}},{"in":"path","name":"service","description":"Output service","required":true,"type":"string"}],"responses":{"200":{"description":"Output created","schema":{"$ref":"#/definitions/outputDTO.ServiceOutputDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://localhost:8003/outputs/service/%7Bservice%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url http://localhost:8003/outputs/service/%7Bservice%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http POST http://localhost:8003/outputs/service/%7Bservice%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8003\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/outputs/service/%7Bservice%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8003\",\n  CURLOPT_URL => \"http://localhost:8003/outputs/service/%7Bservice%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8003/outputs/service/%7Bservice%7D');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8003/outputs/service/%7Bservice%7D');\n$request->setRequestMethod('POST');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]},"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Output service","required":true,"type":"string"}],"responses":{"200":{"description":"List all Outputs By Service","schema":{"$ref":"#/definitions/outputDTO.ServiceOutputDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8003/outputs/service/%7Bservice%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8003/outputs/service/%7Bservice%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8003/outputs/service/%7Bservice%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8003\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/outputs/service/%7Bservice%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8003\",\n  CURLOPT_URL => \"http://localhost:8003/outputs/service/%7Bservice%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8003/outputs/service/%7Bservice%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8003/outputs/service/%7Bservice%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/outputs/service/{service}/{id}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Output service","required":true,"type":"string"},{"in":"path","name":"id","description":"Output id","required":true,"type":"string"}],"responses":{"200":{"description":"List all Outputs By Service","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8003\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/outputs/service/%7Bservice%7D/%7Bid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8003\",\n  CURLOPT_URL => \"http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8003/outputs/service/%7Bservice%7D/%7Bid%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}},"/outputs/service/{service}/source/{source}":{"get":{"consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"path","name":"service","description":"Output service","required":true,"type":"string"},{"in":"path","name":"source","description":"Output source","required":true,"type":"string"}],"responses":{"200":{"description":"List all Outputs By Service and Source","schema":{"$ref":"#/definitions/outputDTO.SchemaDTO"}},"400":{"description":"Bad request","schema":{"$ref":"#/definitions/handlers.Error"}},"500":{"description":"Internal server error","schema":{"$ref":"#/definitions/handlers.Error"}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D',\n  headers: {accept: 'application/json', 'content-type': 'application/json'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/json'"},{"lang":"Shell + Httpie","source":"http GET http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D \\\n  accept:application/json \\\n  content-type:application/json"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8003\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"GET\", \"/outputs/service/%7Bservice%7D/source/%7Bsource%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8003\",\n  CURLOPT_URL => \"http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"accept: application/json\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Php + Http1","source":"<?php\n\n$request = new HttpRequest();\n$request->setUrl('http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"},{"lang":"Php + Http2","source":"<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('http://localhost:8003/outputs/service/%7Bservice%7D/source/%7Bsource%7D');\n$request->setRequestMethod('GET');\n$request->setHeaders([\n  'accept' => 'application/json',\n  'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"}]}}}}
