{
  "name": "services-raw-layer-file-downloader",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/services-raw-layer/file-downloader/file_downloader",
  "targets": {
    "lock": {
      "executor": "@nxlv/python:run-commands",
      "options": {
        "command": "poetry lock --no-update",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "add": {
      "executor": "@nxlv/python:add",
      "options": {}
    },
    "update": {
      "executor": "@nxlv/python:update",
      "options": {}
    },
    "remove": {
      "executor": "@nxlv/python:remove",
      "options": {}
    },
    "build": {
      "executor": "@nxlv/python:build",
      "outputs": [
        "{projectRoot}/dist"
      ],
      "options": {
        "outputPath": "apps/services-raw-layer/file-downloader/dist",
        "publish": false,
        "lockedVersions": true,
        "bundleLocalDependencies": true
      }
    },
    "install": {
      "executor": "@nxlv/python:install",
      "options": {
        "silent": false,
        "args": "",
        "cacheDir": ".cache/pypoetry",
        "verbose": false,
        "debug": false
      }
    },
    "lint": {
      "executor": "@nxlv/python:flake8",
      "outputs": [
        "{workspaceRoot}/reports/apps/services-raw-layer/file-downloader/pylint.txt"
      ],
      "options": {
        "outputFile": "reports/apps/services-raw-layer/file-downloader/pylint.txt"
      }
    },
    "test": {
      "executor": "@nxlv/python:run-commands",
      "outputs": [
        "{workspaceRoot}/reports/apps/services-raw-layer/file-downloader/unittests",
        "{workspaceRoot}/coverage/apps/services-raw-layer/file-downloader"
      ],
      "options": {
        "command": "poetry run pytest tests/",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "image": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "options": {
        "command": "docker build --target {args.image} -t fabiocaffarello/file-downloader:latest --build-arg ENVIRONMENT={args.env} --build-arg USER={args.user} --build-arg USER_ID={args.user_id} --build-arg GROUP_ID={args.group_id} -f ./Dockerfile .",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "start": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose up -d",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "stop-service": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker-compose stop {args.service}",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "check-integration": {
      "executor": "nx:run-commands",
      "dependsOn": ["start"],
      "options": {
        "command": "docker-compose run --rm --entrypoint '/app/hack/check-integration.sh {args.user_id} {args.group_id}' file-downloader",
        "cwd": "apps/services-raw-layer/file-downloader"
      }
    },
    "create-bucket": {
      "executor": "@nx-plugins/env-setup:create-bucket"
    }
  },
  "tags": [
    "lang:python",
    "scope:service"
  ]
}
