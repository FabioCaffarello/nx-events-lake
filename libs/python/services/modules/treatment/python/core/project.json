{
  "name": "python-services-modules-treatment-python-core",
  "$schema": "../../../../../../../node_modules/nx/schemas/project-schema.json",
  "projectType": "library",
  "sourceRoot": "libs/python/services/modules/treatment/python/core/mod_python_domain_core",
  "targets": {
    "lock": {
      "executor": "@nxlv/python:run-commands",
      "options": {
        "command": "poetry lock --no-update",
        "cwd": "libs/python/services/modules/treatment/python/core"
      }
    },
    "add": {
      "executor": "@nxlv/python:add",
      "options": {}
    },
    "update": {
      "executor": "@nxlv/python:update",
      "options": {}
    },
    "remove": {
      "executor": "@nxlv/python:remove",
      "options": {}
    },
    "build": {
      "executor": "@nxlv/python:build",
      "outputs": ["{projectRoot}/dist"],
      "options": {
        "outputPath": "libs/python/services/modules/treatment/python/core/dist",
        "publish": false,
        "lockedVersions": true,
        "bundleLocalDependencies": true
      }
    },
    "install": {
      "executor": "@nxlv/python:install",
      "options": {
        "silent": false,
        "args": "",
        "cacheDir": ".cache/pypoetry",
        "verbose": false,
        "debug": false
      }
    },
    "lint": {
      "executor": "@nxlv/python:flake8",
      "outputs": [
        "{workspaceRoot}/reports/libs/python/services/modules/treatment/python/core/pylint.txt"
      ],
      "options": {
        "outputFile": "reports/libs/python/services/modules/treatment/python/core/pylint.txt"
      }
    },
    "test": {
      "executor": "@nxlv/python:run-commands",
      "outputs": [
        "{workspaceRoot}/reports/libs/python/services/modules/treatment/python/core/unittests",
        "{workspaceRoot}/coverage/libs/python/services/modules/treatment/python/core"
      ],
      "options": {
        "command": "poetry run pytest tests/",
        "cwd": "libs/python/services/modules/treatment/python/core"
      }
    }
  },
  "tags": ["lang:python", "scope:service-module"]
}
